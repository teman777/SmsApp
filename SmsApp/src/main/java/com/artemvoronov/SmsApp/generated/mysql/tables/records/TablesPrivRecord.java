/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.mysql.tables.records;


import com.artemvoronov.SmsApp.generated.mysql.tables.TablesPriv;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table privileges
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TablesPrivRecord extends UpdatableRecordImpl<TablesPrivRecord> implements Record8<String, String, String, String, String, LocalDateTime, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mysql.tables_priv.Host</code>.
     */
    public void setHost(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Host</code>.
     */
    public String getHost() {
        return (String) get(0);
    }

    /**
     * Setter for <code>mysql.tables_priv.Db</code>.
     */
    public void setDb(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Db</code>.
     */
    public String getDb() {
        return (String) get(1);
    }

    /**
     * Setter for <code>mysql.tables_priv.User</code>.
     */
    public void setUser(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.User</code>.
     */
    public String getUser() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql.tables_priv.Table_name</code>.
     */
    public void setTableName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Table_name</code>.
     */
    public String getTableName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>mysql.tables_priv.Grantor</code>.
     */
    public void setGrantor(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Grantor</code>.
     */
    public String getGrantor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mysql.tables_priv.Timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>mysql.tables_priv.Table_priv</code>.
     */
    public void setTablePriv(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Table_priv</code>.
     */
    public String getTablePriv() {
        return (String) get(6);
    }

    /**
     * Setter for <code>mysql.tables_priv.Column_priv</code>.
     */
    public void setColumnPriv(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>mysql.tables_priv.Column_priv</code>.
     */
    public String getColumnPriv() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record4<String, String, String, String> key() {
        return (Record4) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, String, String, LocalDateTime, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, String, String, String, LocalDateTime, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TablesPriv.TABLES_PRIV.HOST;
    }

    @Override
    public Field<String> field2() {
        return TablesPriv.TABLES_PRIV.DB;
    }

    @Override
    public Field<String> field3() {
        return TablesPriv.TABLES_PRIV.USER;
    }

    @Override
    public Field<String> field4() {
        return TablesPriv.TABLES_PRIV.TABLE_NAME;
    }

    @Override
    public Field<String> field5() {
        return TablesPriv.TABLES_PRIV.GRANTOR;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return TablesPriv.TABLES_PRIV.TIMESTAMP;
    }

    @Override
    public Field<String> field7() {
        return TablesPriv.TABLES_PRIV.TABLE_PRIV;
    }

    @Override
    public Field<String> field8() {
        return TablesPriv.TABLES_PRIV.COLUMN_PRIV;
    }

    @Override
    public String component1() {
        return getHost();
    }

    @Override
    public String component2() {
        return getDb();
    }

    @Override
    public String component3() {
        return getUser();
    }

    @Override
    public String component4() {
        return getTableName();
    }

    @Override
    public String component5() {
        return getGrantor();
    }

    @Override
    public LocalDateTime component6() {
        return getTimestamp();
    }

    @Override
    public String component7() {
        return getTablePriv();
    }

    @Override
    public String component8() {
        return getColumnPriv();
    }

    @Override
    public String value1() {
        return getHost();
    }

    @Override
    public String value2() {
        return getDb();
    }

    @Override
    public String value3() {
        return getUser();
    }

    @Override
    public String value4() {
        return getTableName();
    }

    @Override
    public String value5() {
        return getGrantor();
    }

    @Override
    public LocalDateTime value6() {
        return getTimestamp();
    }

    @Override
    public String value7() {
        return getTablePriv();
    }

    @Override
    public String value8() {
        return getColumnPriv();
    }

    @Override
    public TablesPrivRecord value1(String value) {
        setHost(value);
        return this;
    }

    @Override
    public TablesPrivRecord value2(String value) {
        setDb(value);
        return this;
    }

    @Override
    public TablesPrivRecord value3(String value) {
        setUser(value);
        return this;
    }

    @Override
    public TablesPrivRecord value4(String value) {
        setTableName(value);
        return this;
    }

    @Override
    public TablesPrivRecord value5(String value) {
        setGrantor(value);
        return this;
    }

    @Override
    public TablesPrivRecord value6(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public TablesPrivRecord value7(String value) {
        setTablePriv(value);
        return this;
    }

    @Override
    public TablesPrivRecord value8(String value) {
        setColumnPriv(value);
        return this;
    }

    @Override
    public TablesPrivRecord values(String value1, String value2, String value3, String value4, String value5, LocalDateTime value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TablesPrivRecord
     */
    public TablesPrivRecord() {
        super(TablesPriv.TABLES_PRIV);
    }

    /**
     * Create a detached, initialised TablesPrivRecord
     */
    public TablesPrivRecord(String host, String db, String user, String tableName, String grantor, LocalDateTime timestamp, String tablePriv, String columnPriv) {
        super(TablesPriv.TABLES_PRIV);

        setHost(host);
        setDb(db);
        setUser(user);
        setTableName(tableName);
        setGrantor(grantor);
        setTimestamp(timestamp);
        setTablePriv(tablePriv);
        setColumnPriv(columnPriv);
    }
}
