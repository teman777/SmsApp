/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.information_schema.tables.records;


import com.artemvoronov.SmsApp.generated.information_schema.tables.ColumnStatistics;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ColumnStatisticsRecord extends TableRecordImpl<ColumnStatisticsRecord> implements Record4<String, String, String, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>information_schema.COLUMN_STATISTICS.SCHEMA_NAME</code>.
     */
    public void setSchemaName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.SCHEMA_NAME</code>.
     */
    public String getSchemaName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.COLUMN_STATISTICS.TABLE_NAME</code>.
     */
    public void setTableName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.TABLE_NAME</code>.
     */
    public String getTableName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.COLUMN_STATISTICS.COLUMN_NAME</code>.
     */
    public void setColumnName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.COLUMN_NAME</code>.
     */
    public String getColumnName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.COLUMN_STATISTICS.HISTOGRAM</code>.
     */
    public void setHistogram(JSON value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.COLUMN_STATISTICS.HISTOGRAM</code>.
     */
    public JSON getHistogram() {
        return (JSON) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, JSON> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, JSON> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ColumnStatistics.COLUMN_STATISTICS.SCHEMA_NAME;
    }

    @Override
    public Field<String> field2() {
        return ColumnStatistics.COLUMN_STATISTICS.TABLE_NAME;
    }

    @Override
    public Field<String> field3() {
        return ColumnStatistics.COLUMN_STATISTICS.COLUMN_NAME;
    }

    @Override
    public Field<JSON> field4() {
        return ColumnStatistics.COLUMN_STATISTICS.HISTOGRAM;
    }

    @Override
    public String component1() {
        return getSchemaName();
    }

    @Override
    public String component2() {
        return getTableName();
    }

    @Override
    public String component3() {
        return getColumnName();
    }

    @Override
    public JSON component4() {
        return getHistogram();
    }

    @Override
    public String value1() {
        return getSchemaName();
    }

    @Override
    public String value2() {
        return getTableName();
    }

    @Override
    public String value3() {
        return getColumnName();
    }

    @Override
    public JSON value4() {
        return getHistogram();
    }

    @Override
    public ColumnStatisticsRecord value1(String value) {
        setSchemaName(value);
        return this;
    }

    @Override
    public ColumnStatisticsRecord value2(String value) {
        setTableName(value);
        return this;
    }

    @Override
    public ColumnStatisticsRecord value3(String value) {
        setColumnName(value);
        return this;
    }

    @Override
    public ColumnStatisticsRecord value4(JSON value) {
        setHistogram(value);
        return this;
    }

    @Override
    public ColumnStatisticsRecord values(String value1, String value2, String value3, JSON value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ColumnStatisticsRecord
     */
    public ColumnStatisticsRecord() {
        super(ColumnStatistics.COLUMN_STATISTICS);
    }

    /**
     * Create a detached, initialised ColumnStatisticsRecord
     */
    public ColumnStatisticsRecord(String schemaName, String tableName, String columnName, JSON histogram) {
        super(ColumnStatistics.COLUMN_STATISTICS);

        setSchemaName(schemaName);
        setTableName(tableName);
        setColumnName(columnName);
        setHistogram(histogram);
    }
}
