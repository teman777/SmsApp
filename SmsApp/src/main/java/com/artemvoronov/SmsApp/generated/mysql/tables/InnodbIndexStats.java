/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.mysql.tables;


import com.artemvoronov.SmsApp.generated.mysql.Keys;
import com.artemvoronov.SmsApp.generated.mysql.Mysql;
import com.artemvoronov.SmsApp.generated.mysql.tables.records.InnodbIndexStatsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbIndexStats extends TableImpl<InnodbIndexStatsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mysql.innodb_index_stats</code>
     */
    public static final InnodbIndexStats INNODB_INDEX_STATS = new InnodbIndexStats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InnodbIndexStatsRecord> getRecordType() {
        return InnodbIndexStatsRecord.class;
    }

    /**
     * The column <code>mysql.innodb_index_stats.database_name</code>.
     */
    public final TableField<InnodbIndexStatsRecord, String> DATABASE_NAME = createField(DSL.name("database_name"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.innodb_index_stats.table_name</code>.
     */
    public final TableField<InnodbIndexStatsRecord, String> TABLE_NAME = createField(DSL.name("table_name"), SQLDataType.VARCHAR(199).nullable(false), this, "");

    /**
     * The column <code>mysql.innodb_index_stats.index_name</code>.
     */
    public final TableField<InnodbIndexStatsRecord, String> INDEX_NAME = createField(DSL.name("index_name"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.innodb_index_stats.last_update</code>.
     */
    public final TableField<InnodbIndexStatsRecord, LocalDateTime> LAST_UPDATE = createField(DSL.name("last_update"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>mysql.innodb_index_stats.stat_name</code>.
     */
    public final TableField<InnodbIndexStatsRecord, String> STAT_NAME = createField(DSL.name("stat_name"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.innodb_index_stats.stat_value</code>.
     */
    public final TableField<InnodbIndexStatsRecord, ULong> STAT_VALUE = createField(DSL.name("stat_value"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>mysql.innodb_index_stats.sample_size</code>.
     */
    public final TableField<InnodbIndexStatsRecord, ULong> SAMPLE_SIZE = createField(DSL.name("sample_size"), SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>mysql.innodb_index_stats.stat_description</code>.
     */
    public final TableField<InnodbIndexStatsRecord, String> STAT_DESCRIPTION = createField(DSL.name("stat_description"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

    private InnodbIndexStats(Name alias, Table<InnodbIndexStatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private InnodbIndexStats(Name alias, Table<InnodbIndexStatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>mysql.innodb_index_stats</code> table reference
     */
    public InnodbIndexStats(String alias) {
        this(DSL.name(alias), INNODB_INDEX_STATS);
    }

    /**
     * Create an aliased <code>mysql.innodb_index_stats</code> table reference
     */
    public InnodbIndexStats(Name alias) {
        this(alias, INNODB_INDEX_STATS);
    }

    /**
     * Create a <code>mysql.innodb_index_stats</code> table reference
     */
    public InnodbIndexStats() {
        this(DSL.name("innodb_index_stats"), null);
    }

    public <O extends Record> InnodbIndexStats(Table<O> child, ForeignKey<O, InnodbIndexStatsRecord> key) {
        super(child, key, INNODB_INDEX_STATS);
    }

    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    @Override
    public UniqueKey<InnodbIndexStatsRecord> getPrimaryKey() {
        return Keys.KEY_INNODB_INDEX_STATS_PRIMARY;
    }

    @Override
    public List<UniqueKey<InnodbIndexStatsRecord>> getKeys() {
        return Arrays.<UniqueKey<InnodbIndexStatsRecord>>asList(Keys.KEY_INNODB_INDEX_STATS_PRIMARY);
    }

    @Override
    public InnodbIndexStats as(String alias) {
        return new InnodbIndexStats(DSL.name(alias), this);
    }

    @Override
    public InnodbIndexStats as(Name alias) {
        return new InnodbIndexStats(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbIndexStats rename(String name) {
        return new InnodbIndexStats(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbIndexStats rename(Name name) {
        return new InnodbIndexStats(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, String, LocalDateTime, String, ULong, ULong, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
