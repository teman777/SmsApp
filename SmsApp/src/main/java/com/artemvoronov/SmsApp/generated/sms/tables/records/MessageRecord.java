/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sms.tables.records;


import com.artemvoronov.SmsApp.generated.sms.tables.Message;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record3<Integer, LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>SMS.Message.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>SMS.Message.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>SMS.Message.CreatedDate</code>.
     */
    public void setCreateddate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>SMS.Message.CreatedDate</code>.
     */
    public LocalDate getCreateddate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>SMS.Message.Text</code>.
     */
    public void setText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>SMS.Message.Text</code>.
     */
    public String getText() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDate, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDate, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Message.MESSAGE.CREATEDDATE;
    }

    @Override
    public Field<String> field3() {
        return Message.MESSAGE.TEXT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getCreateddate();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getCreateddate();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public MessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(LocalDate value) {
        setCreateddate(value);
        return this;
    }

    @Override
    public MessageRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public MessageRecord values(Integer value1, LocalDate value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Integer id, LocalDate createddate, String text) {
        super(Message.MESSAGE);

        setId(id);
        setCreateddate(createddate);
        setText(text);
    }
}
