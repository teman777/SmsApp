/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sys.tables;


import com.artemvoronov.SmsApp.generated.sys.Sys;
import com.artemvoronov.SmsApp.generated.sys.tables.records.X$psSchemaTableStatisticsIoRecord;

import java.math.BigInteger;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$psSchemaTableStatisticsIo extends TableImpl<X$psSchemaTableStatisticsIoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>sys.x$ps_schema_table_statistics_io</code>
     */
    public static final X$psSchemaTableStatisticsIo X$PS_SCHEMA_TABLE_STATISTICS_IO = new X$psSchemaTableStatisticsIo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<X$psSchemaTableStatisticsIoRecord> getRecordType() {
        return X$psSchemaTableStatisticsIoRecord.class;
    }

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.table_schema</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, String> TABLE_SCHEMA = createField(DSL.name("table_schema"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.table_name</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, String> TABLE_NAME = createField(DSL.name("table_name"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.count_read</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> COUNT_READ = createField(DSL.name("count_read"), SQLDataType.DECIMAL_INTEGER(42), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.sum_number_of_bytes_read</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> SUM_NUMBER_OF_BYTES_READ = createField(DSL.name("sum_number_of_bytes_read"), SQLDataType.DECIMAL_INTEGER(41), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.sum_timer_read</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> SUM_TIMER_READ = createField(DSL.name("sum_timer_read"), SQLDataType.DECIMAL_INTEGER(42), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.count_write</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> COUNT_WRITE = createField(DSL.name("count_write"), SQLDataType.DECIMAL_INTEGER(42), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.sum_number_of_bytes_write</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> SUM_NUMBER_OF_BYTES_WRITE = createField(DSL.name("sum_number_of_bytes_write"), SQLDataType.DECIMAL_INTEGER(41), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.sum_timer_write</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> SUM_TIMER_WRITE = createField(DSL.name("sum_timer_write"), SQLDataType.DECIMAL_INTEGER(42), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.count_misc</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> COUNT_MISC = createField(DSL.name("count_misc"), SQLDataType.DECIMAL_INTEGER(42), this, "");

    /**
     * The column <code>sys.x$ps_schema_table_statistics_io.sum_timer_misc</code>.
     */
    public final TableField<X$psSchemaTableStatisticsIoRecord, BigInteger> SUM_TIMER_MISC = createField(DSL.name("sum_timer_misc"), SQLDataType.DECIMAL_INTEGER(42), this, "");

    private X$psSchemaTableStatisticsIo(Name alias, Table<X$psSchemaTableStatisticsIoRecord> aliased) {
        this(alias, aliased, null);
    }

    private X$psSchemaTableStatisticsIo(Name alias, Table<X$psSchemaTableStatisticsIoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `x$ps_schema_table_statistics_io` as select `extract_schema_from_file_name`(`performance_schema`.`file_summary_by_instance`.`FILE_NAME`) AS `table_schema`,`extract_table_from_file_name`(`performance_schema`.`file_summary_by_instance`.`FILE_NAME`) AS `table_name`,sum(`performance_schema`.`file_summary_by_instance`.`COUNT_READ`) AS `count_read`,sum(`performance_schema`.`file_summary_by_instance`.`SUM_NUMBER_OF_BYTES_READ`) AS `sum_number_of_bytes_read`,sum(`performance_schema`.`file_summary_by_instance`.`SUM_TIMER_READ`) AS `sum_timer_read`,sum(`performance_schema`.`file_summary_by_instance`.`COUNT_WRITE`) AS `count_write`,sum(`performance_schema`.`file_summary_by_instance`.`SUM_NUMBER_OF_BYTES_WRITE`) AS `sum_number_of_bytes_write`,sum(`performance_schema`.`file_summary_by_instance`.`SUM_TIMER_WRITE`) AS `sum_timer_write`,sum(`performance_schema`.`file_summary_by_instance`.`COUNT_MISC`) AS `count_misc`,sum(`performance_schema`.`file_summary_by_instance`.`SUM_TIMER_MISC`) AS `sum_timer_misc` from `performance_schema`.`file_summary_by_instance` group by `table_schema`,`table_name`"));
    }

    /**
     * Create an aliased <code>sys.x$ps_schema_table_statistics_io</code> table reference
     */
    public X$psSchemaTableStatisticsIo(String alias) {
        this(DSL.name(alias), X$PS_SCHEMA_TABLE_STATISTICS_IO);
    }

    /**
     * Create an aliased <code>sys.x$ps_schema_table_statistics_io</code> table reference
     */
    public X$psSchemaTableStatisticsIo(Name alias) {
        this(alias, X$PS_SCHEMA_TABLE_STATISTICS_IO);
    }

    /**
     * Create a <code>sys.x$ps_schema_table_statistics_io</code> table reference
     */
    public X$psSchemaTableStatisticsIo() {
        this(DSL.name("x$ps_schema_table_statistics_io"), null);
    }

    public <O extends Record> X$psSchemaTableStatisticsIo(Table<O> child, ForeignKey<O, X$psSchemaTableStatisticsIoRecord> key) {
        super(child, key, X$PS_SCHEMA_TABLE_STATISTICS_IO);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public X$psSchemaTableStatisticsIo as(String alias) {
        return new X$psSchemaTableStatisticsIo(DSL.name(alias), this);
    }

    @Override
    public X$psSchemaTableStatisticsIo as(Name alias) {
        return new X$psSchemaTableStatisticsIo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public X$psSchemaTableStatisticsIo rename(String name) {
        return new X$psSchemaTableStatisticsIo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public X$psSchemaTableStatisticsIo rename(Name name) {
        return new X$psSchemaTableStatisticsIo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
