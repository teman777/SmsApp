/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.performance_schema.tables.records;


import com.artemvoronov.SmsApp.generated.performance_schema.tables.EventsStatementsHistogramByDigest;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsStatementsHistogramByDigestRecord extends TableRecordImpl<EventsStatementsHistogramByDigestRecord> implements Record8<String, String, UInteger, ULong, ULong, ULong, ULong, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.SCHEMA_NAME</code>.
     */
    public void setSchemaName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.SCHEMA_NAME</code>.
     */
    public String getSchemaName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.DIGEST</code>.
     */
    public void setDigest(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.DIGEST</code>.
     */
    public String getDigest() {
        return (String) get(1);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_NUMBER</code>.
     */
    public void setBucketNumber(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_NUMBER</code>.
     */
    public UInteger getBucketNumber() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_TIMER_LOW</code>.
     */
    public void setBucketTimerLow(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_TIMER_LOW</code>.
     */
    public ULong getBucketTimerLow() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_TIMER_HIGH</code>.
     */
    public void setBucketTimerHigh(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_TIMER_HIGH</code>.
     */
    public ULong getBucketTimerHigh() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.COUNT_BUCKET</code>.
     */
    public void setCountBucket(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.COUNT_BUCKET</code>.
     */
    public ULong getCountBucket() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.COUNT_BUCKET_AND_LOWER</code>.
     */
    public void setCountBucketAndLower(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.COUNT_BUCKET_AND_LOWER</code>.
     */
    public ULong getCountBucketAndLower() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_QUANTILE</code>.
     */
    public void setBucketQuantile(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>performance_schema.events_statements_histogram_by_digest.BUCKET_QUANTILE</code>.
     */
    public Double getBucketQuantile() {
        return (Double) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, UInteger, ULong, ULong, ULong, ULong, Double> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, UInteger, ULong, ULong, ULong, ULong, Double> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.SCHEMA_NAME;
    }

    @Override
    public Field<String> field2() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.DIGEST;
    }

    @Override
    public Field<UInteger> field3() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_NUMBER;
    }

    @Override
    public Field<ULong> field4() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_TIMER_LOW;
    }

    @Override
    public Field<ULong> field5() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_TIMER_HIGH;
    }

    @Override
    public Field<ULong> field6() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.COUNT_BUCKET;
    }

    @Override
    public Field<ULong> field7() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.COUNT_BUCKET_AND_LOWER;
    }

    @Override
    public Field<Double> field8() {
        return EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST.BUCKET_QUANTILE;
    }

    @Override
    public String component1() {
        return getSchemaName();
    }

    @Override
    public String component2() {
        return getDigest();
    }

    @Override
    public UInteger component3() {
        return getBucketNumber();
    }

    @Override
    public ULong component4() {
        return getBucketTimerLow();
    }

    @Override
    public ULong component5() {
        return getBucketTimerHigh();
    }

    @Override
    public ULong component6() {
        return getCountBucket();
    }

    @Override
    public ULong component7() {
        return getCountBucketAndLower();
    }

    @Override
    public Double component8() {
        return getBucketQuantile();
    }

    @Override
    public String value1() {
        return getSchemaName();
    }

    @Override
    public String value2() {
        return getDigest();
    }

    @Override
    public UInteger value3() {
        return getBucketNumber();
    }

    @Override
    public ULong value4() {
        return getBucketTimerLow();
    }

    @Override
    public ULong value5() {
        return getBucketTimerHigh();
    }

    @Override
    public ULong value6() {
        return getCountBucket();
    }

    @Override
    public ULong value7() {
        return getCountBucketAndLower();
    }

    @Override
    public Double value8() {
        return getBucketQuantile();
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value1(String value) {
        setSchemaName(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value2(String value) {
        setDigest(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value3(UInteger value) {
        setBucketNumber(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value4(ULong value) {
        setBucketTimerLow(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value5(ULong value) {
        setBucketTimerHigh(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value6(ULong value) {
        setCountBucket(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value7(ULong value) {
        setCountBucketAndLower(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord value8(Double value) {
        setBucketQuantile(value);
        return this;
    }

    @Override
    public EventsStatementsHistogramByDigestRecord values(String value1, String value2, UInteger value3, ULong value4, ULong value5, ULong value6, ULong value7, Double value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsStatementsHistogramByDigestRecord
     */
    public EventsStatementsHistogramByDigestRecord() {
        super(EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST);
    }

    /**
     * Create a detached, initialised EventsStatementsHistogramByDigestRecord
     */
    public EventsStatementsHistogramByDigestRecord(String schemaName, String digest, UInteger bucketNumber, ULong bucketTimerLow, ULong bucketTimerHigh, ULong countBucket, ULong countBucketAndLower, Double bucketQuantile) {
        super(EventsStatementsHistogramByDigest.EVENTS_STATEMENTS_HISTOGRAM_BY_DIGEST);

        setSchemaName(schemaName);
        setDigest(digest);
        setBucketNumber(bucketNumber);
        setBucketTimerLow(bucketTimerLow);
        setBucketTimerHigh(bucketTimerHigh);
        setCountBucket(countBucket);
        setCountBucketAndLower(countBucketAndLower);
        setBucketQuantile(bucketQuantile);
    }
}
