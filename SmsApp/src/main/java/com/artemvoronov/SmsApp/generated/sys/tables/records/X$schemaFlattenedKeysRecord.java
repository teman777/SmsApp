/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sys.tables.records;


import com.artemvoronov.SmsApp.generated.sys.tables.X$schemaFlattenedKeys;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$schemaFlattenedKeysRecord extends TableRecordImpl<X$schemaFlattenedKeysRecord> implements Record6<String, String, String, Integer, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sys.x$schema_flattened_keys.table_schema</code>.
     */
    public void setTableSchema(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sys.x$schema_flattened_keys.table_schema</code>.
     */
    public String getTableSchema() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sys.x$schema_flattened_keys.table_name</code>.
     */
    public void setTableName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sys.x$schema_flattened_keys.table_name</code>.
     */
    public String getTableName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sys.x$schema_flattened_keys.index_name</code>.
     */
    public void setIndexName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sys.x$schema_flattened_keys.index_name</code>.
     */
    public String getIndexName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sys.x$schema_flattened_keys.non_unique</code>.
     */
    public void setNonUnique(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sys.x$schema_flattened_keys.non_unique</code>.
     */
    public Integer getNonUnique() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sys.x$schema_flattened_keys.subpart_exists</code>.
     */
    public void setSubpartExists(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>sys.x$schema_flattened_keys.subpart_exists</code>.
     */
    public Long getSubpartExists() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>sys.x$schema_flattened_keys.index_columns</code>.
     */
    public void setIndexColumns(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sys.x$schema_flattened_keys.index_columns</code>.
     */
    public String getIndexColumns() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, Integer, Long, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, Integer, Long, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS.TABLE_SCHEMA;
    }

    @Override
    public Field<String> field2() {
        return X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS.TABLE_NAME;
    }

    @Override
    public Field<String> field3() {
        return X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS.INDEX_NAME;
    }

    @Override
    public Field<Integer> field4() {
        return X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS.NON_UNIQUE;
    }

    @Override
    public Field<Long> field5() {
        return X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS.SUBPART_EXISTS;
    }

    @Override
    public Field<String> field6() {
        return X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS.INDEX_COLUMNS;
    }

    @Override
    public String component1() {
        return getTableSchema();
    }

    @Override
    public String component2() {
        return getTableName();
    }

    @Override
    public String component3() {
        return getIndexName();
    }

    @Override
    public Integer component4() {
        return getNonUnique();
    }

    @Override
    public Long component5() {
        return getSubpartExists();
    }

    @Override
    public String component6() {
        return getIndexColumns();
    }

    @Override
    public String value1() {
        return getTableSchema();
    }

    @Override
    public String value2() {
        return getTableName();
    }

    @Override
    public String value3() {
        return getIndexName();
    }

    @Override
    public Integer value4() {
        return getNonUnique();
    }

    @Override
    public Long value5() {
        return getSubpartExists();
    }

    @Override
    public String value6() {
        return getIndexColumns();
    }

    @Override
    public X$schemaFlattenedKeysRecord value1(String value) {
        setTableSchema(value);
        return this;
    }

    @Override
    public X$schemaFlattenedKeysRecord value2(String value) {
        setTableName(value);
        return this;
    }

    @Override
    public X$schemaFlattenedKeysRecord value3(String value) {
        setIndexName(value);
        return this;
    }

    @Override
    public X$schemaFlattenedKeysRecord value4(Integer value) {
        setNonUnique(value);
        return this;
    }

    @Override
    public X$schemaFlattenedKeysRecord value5(Long value) {
        setSubpartExists(value);
        return this;
    }

    @Override
    public X$schemaFlattenedKeysRecord value6(String value) {
        setIndexColumns(value);
        return this;
    }

    @Override
    public X$schemaFlattenedKeysRecord values(String value1, String value2, String value3, Integer value4, Long value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached X$schemaFlattenedKeysRecord
     */
    public X$schemaFlattenedKeysRecord() {
        super(X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS);
    }

    /**
     * Create a detached, initialised X$schemaFlattenedKeysRecord
     */
    public X$schemaFlattenedKeysRecord(String tableSchema, String tableName, String indexName, Integer nonUnique, Long subpartExists, String indexColumns) {
        super(X$schemaFlattenedKeys.X$SCHEMA_FLATTENED_KEYS);

        setTableSchema(tableSchema);
        setTableName(tableName);
        setIndexName(indexName);
        setNonUnique(nonUnique);
        setSubpartExists(subpartExists);
        setIndexColumns(indexColumns);
    }
}
