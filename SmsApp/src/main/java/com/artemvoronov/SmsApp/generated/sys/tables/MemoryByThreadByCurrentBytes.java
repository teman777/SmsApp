/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sys.tables;


import com.artemvoronov.SmsApp.generated.sys.Sys;
import com.artemvoronov.SmsApp.generated.sys.tables.records.MemoryByThreadByCurrentBytesRecord;

import java.math.BigInteger;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemoryByThreadByCurrentBytes extends TableImpl<MemoryByThreadByCurrentBytesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>sys.memory_by_thread_by_current_bytes</code>
     */
    public static final MemoryByThreadByCurrentBytes MEMORY_BY_THREAD_BY_CURRENT_BYTES = new MemoryByThreadByCurrentBytes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemoryByThreadByCurrentBytesRecord> getRecordType() {
        return MemoryByThreadByCurrentBytesRecord.class;
    }

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.thread_id</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, ULong> THREAD_ID = createField(DSL.name("thread_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.user</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, String> USER = createField(DSL.name("user"), SQLDataType.VARCHAR(288), this, "");

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.current_count_used</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, BigInteger> CURRENT_COUNT_USED = createField(DSL.name("current_count_used"), SQLDataType.DECIMAL_INTEGER(41), this, "");

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.current_allocated</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, String> CURRENT_ALLOCATED = createField(DSL.name("current_allocated"), SQLDataType.VARCHAR(11), this, "");

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.current_avg_alloc</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, String> CURRENT_AVG_ALLOC = createField(DSL.name("current_avg_alloc"), SQLDataType.VARCHAR(11), this, "");

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.current_max_alloc</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, String> CURRENT_MAX_ALLOC = createField(DSL.name("current_max_alloc"), SQLDataType.VARCHAR(11), this, "");

    /**
     * The column <code>sys.memory_by_thread_by_current_bytes.total_allocated</code>.
     */
    public final TableField<MemoryByThreadByCurrentBytesRecord, String> TOTAL_ALLOCATED = createField(DSL.name("total_allocated"), SQLDataType.VARCHAR(11), this, "");

    private MemoryByThreadByCurrentBytes(Name alias, Table<MemoryByThreadByCurrentBytesRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemoryByThreadByCurrentBytes(Name alias, Table<MemoryByThreadByCurrentBytesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("VIEW"), TableOptions.view("create view `memory_by_thread_by_current_bytes` as select `mt`.`THREAD_ID` AS `thread_id`,if((`t`.`NAME` = 'thread/sql/one_connection'),concat(`t`.`PROCESSLIST_USER`,'@',convert(`t`.`PROCESSLIST_HOST` using utf8mb4)),replace(`t`.`NAME`,'thread/','')) AS `user`,sum(`mt`.`CURRENT_COUNT_USED`) AS `current_count_used`,format_bytes(sum(`mt`.`CURRENT_NUMBER_OF_BYTES_USED`)) AS `current_allocated`,format_bytes(ifnull((sum(`mt`.`CURRENT_NUMBER_OF_BYTES_USED`) / nullif(sum(`mt`.`CURRENT_COUNT_USED`),0)),0)) AS `current_avg_alloc`,format_bytes(max(`mt`.`CURRENT_NUMBER_OF_BYTES_USED`)) AS `current_max_alloc`,format_bytes(sum(`mt`.`SUM_NUMBER_OF_BYTES_ALLOC`)) AS `total_allocated` from (`performance_schema`.`memory_summary_by_thread_by_event_name` `mt` join `performance_schema`.`threads` `t` on((`mt`.`THREAD_ID` = `t`.`THREAD_ID`))) group by `mt`.`THREAD_ID`,if((`t`.`NAME` = 'thread/sql/one_connection'),concat(`t`.`PROCESSLIST_USER`,'@',convert(`t`.`PROCESSLIST_HOST` using utf8mb4)),replace(`t`.`NAME`,'thread/','')) order by sum(`mt`.`CURRENT_NUMBER_OF_BYTES_USED`) desc"));
    }

    /**
     * Create an aliased <code>sys.memory_by_thread_by_current_bytes</code> table reference
     */
    public MemoryByThreadByCurrentBytes(String alias) {
        this(DSL.name(alias), MEMORY_BY_THREAD_BY_CURRENT_BYTES);
    }

    /**
     * Create an aliased <code>sys.memory_by_thread_by_current_bytes</code> table reference
     */
    public MemoryByThreadByCurrentBytes(Name alias) {
        this(alias, MEMORY_BY_THREAD_BY_CURRENT_BYTES);
    }

    /**
     * Create a <code>sys.memory_by_thread_by_current_bytes</code> table reference
     */
    public MemoryByThreadByCurrentBytes() {
        this(DSL.name("memory_by_thread_by_current_bytes"), null);
    }

    public <O extends Record> MemoryByThreadByCurrentBytes(Table<O> child, ForeignKey<O, MemoryByThreadByCurrentBytesRecord> key) {
        super(child, key, MEMORY_BY_THREAD_BY_CURRENT_BYTES);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }

    @Override
    public MemoryByThreadByCurrentBytes as(String alias) {
        return new MemoryByThreadByCurrentBytes(DSL.name(alias), this);
    }

    @Override
    public MemoryByThreadByCurrentBytes as(Name alias) {
        return new MemoryByThreadByCurrentBytes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemoryByThreadByCurrentBytes rename(String name) {
        return new MemoryByThreadByCurrentBytes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemoryByThreadByCurrentBytes rename(Name name) {
        return new MemoryByThreadByCurrentBytes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, String, BigInteger, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
