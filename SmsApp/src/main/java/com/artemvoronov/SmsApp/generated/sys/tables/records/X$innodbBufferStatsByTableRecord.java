/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sys.tables.records;


import com.artemvoronov.SmsApp.generated.sys.tables.X$innodbBufferStatsByTable;

import java.math.BigInteger;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$innodbBufferStatsByTableRecord extends TableRecordImpl<X$innodbBufferStatsByTableRecord> implements Record8<String, String, BigInteger, BigInteger, Long, Long, Long, BigInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.object_schema</code>.
     */
    public void setObjectSchema(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.object_schema</code>.
     */
    public String getObjectSchema() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.object_name</code>.
     */
    public void setObjectName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.object_name</code>.
     */
    public String getObjectName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.allocated</code>.
     */
    public void setAllocated(BigInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.allocated</code>.
     */
    public BigInteger getAllocated() {
        return (BigInteger) get(2);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.data</code>.
     */
    public void setData(BigInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.data</code>.
     */
    public BigInteger getData() {
        return (BigInteger) get(3);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.pages</code>.
     */
    public void setPages(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.pages</code>.
     */
    public Long getPages() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.pages_hashed</code>.
     */
    public void setPagesHashed(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.pages_hashed</code>.
     */
    public Long getPagesHashed() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.pages_old</code>.
     */
    public void setPagesOld(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.pages_old</code>.
     */
    public Long getPagesOld() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>sys.x$innodb_buffer_stats_by_table.rows_cached</code>.
     */
    public void setRowsCached(BigInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>sys.x$innodb_buffer_stats_by_table.rows_cached</code>.
     */
    public BigInteger getRowsCached() {
        return (BigInteger) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, BigInteger, BigInteger, Long, Long, Long, BigInteger> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, BigInteger, BigInteger, Long, Long, Long, BigInteger> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.OBJECT_SCHEMA;
    }

    @Override
    public Field<String> field2() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.OBJECT_NAME;
    }

    @Override
    public Field<BigInteger> field3() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.ALLOCATED;
    }

    @Override
    public Field<BigInteger> field4() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.DATA;
    }

    @Override
    public Field<Long> field5() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.PAGES;
    }

    @Override
    public Field<Long> field6() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.PAGES_HASHED;
    }

    @Override
    public Field<Long> field7() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.PAGES_OLD;
    }

    @Override
    public Field<BigInteger> field8() {
        return X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE.ROWS_CACHED;
    }

    @Override
    public String component1() {
        return getObjectSchema();
    }

    @Override
    public String component2() {
        return getObjectName();
    }

    @Override
    public BigInteger component3() {
        return getAllocated();
    }

    @Override
    public BigInteger component4() {
        return getData();
    }

    @Override
    public Long component5() {
        return getPages();
    }

    @Override
    public Long component6() {
        return getPagesHashed();
    }

    @Override
    public Long component7() {
        return getPagesOld();
    }

    @Override
    public BigInteger component8() {
        return getRowsCached();
    }

    @Override
    public String value1() {
        return getObjectSchema();
    }

    @Override
    public String value2() {
        return getObjectName();
    }

    @Override
    public BigInteger value3() {
        return getAllocated();
    }

    @Override
    public BigInteger value4() {
        return getData();
    }

    @Override
    public Long value5() {
        return getPages();
    }

    @Override
    public Long value6() {
        return getPagesHashed();
    }

    @Override
    public Long value7() {
        return getPagesOld();
    }

    @Override
    public BigInteger value8() {
        return getRowsCached();
    }

    @Override
    public X$innodbBufferStatsByTableRecord value1(String value) {
        setObjectSchema(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value2(String value) {
        setObjectName(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value3(BigInteger value) {
        setAllocated(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value4(BigInteger value) {
        setData(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value5(Long value) {
        setPages(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value6(Long value) {
        setPagesHashed(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value7(Long value) {
        setPagesOld(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord value8(BigInteger value) {
        setRowsCached(value);
        return this;
    }

    @Override
    public X$innodbBufferStatsByTableRecord values(String value1, String value2, BigInteger value3, BigInteger value4, Long value5, Long value6, Long value7, BigInteger value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached X$innodbBufferStatsByTableRecord
     */
    public X$innodbBufferStatsByTableRecord() {
        super(X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE);
    }

    /**
     * Create a detached, initialised X$innodbBufferStatsByTableRecord
     */
    public X$innodbBufferStatsByTableRecord(String objectSchema, String objectName, BigInteger allocated, BigInteger data, Long pages, Long pagesHashed, Long pagesOld, BigInteger rowsCached) {
        super(X$innodbBufferStatsByTable.X$INNODB_BUFFER_STATS_BY_TABLE);

        setObjectSchema(objectSchema);
        setObjectName(objectName);
        setAllocated(allocated);
        setData(data);
        setPages(pages);
        setPagesHashed(pagesHashed);
        setPagesOld(pagesOld);
        setRowsCached(rowsCached);
    }
}
