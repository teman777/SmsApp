/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.performance_schema.tables;


import com.artemvoronov.SmsApp.generated.performance_schema.Keys;
import com.artemvoronov.SmsApp.generated.performance_schema.PerformanceSchema;
import com.artemvoronov.SmsApp.generated.performance_schema.tables.records.EventsErrorsSummaryGlobalByErrorRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsErrorsSummaryGlobalByError extends TableImpl<EventsErrorsSummaryGlobalByErrorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>performance_schema.events_errors_summary_global_by_error</code>
     */
    public static final EventsErrorsSummaryGlobalByError EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR = new EventsErrorsSummaryGlobalByError();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventsErrorsSummaryGlobalByErrorRecord> getRecordType() {
        return EventsErrorsSummaryGlobalByErrorRecord.class;
    }

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.ERROR_NUMBER</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, Integer> ERROR_NUMBER = createField(DSL.name("ERROR_NUMBER"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.ERROR_NAME</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, String> ERROR_NAME = createField(DSL.name("ERROR_NAME"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.SQL_STATE</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, String> SQL_STATE = createField(DSL.name("SQL_STATE"), SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.SUM_ERROR_RAISED</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, ULong> SUM_ERROR_RAISED = createField(DSL.name("SUM_ERROR_RAISED"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.SUM_ERROR_HANDLED</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, ULong> SUM_ERROR_HANDLED = createField(DSL.name("SUM_ERROR_HANDLED"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.FIRST_SEEN</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, LocalDateTime> FIRST_SEEN = createField(DSL.name("FIRST_SEEN"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("0000-00-00 00:00:00", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>performance_schema.events_errors_summary_global_by_error.LAST_SEEN</code>.
     */
    public final TableField<EventsErrorsSummaryGlobalByErrorRecord, LocalDateTime> LAST_SEEN = createField(DSL.name("LAST_SEEN"), SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("0000-00-00 00:00:00", SQLDataType.LOCALDATETIME)), this, "");

    private EventsErrorsSummaryGlobalByError(Name alias, Table<EventsErrorsSummaryGlobalByErrorRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventsErrorsSummaryGlobalByError(Name alias, Table<EventsErrorsSummaryGlobalByErrorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>performance_schema.events_errors_summary_global_by_error</code> table reference
     */
    public EventsErrorsSummaryGlobalByError(String alias) {
        this(DSL.name(alias), EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR);
    }

    /**
     * Create an aliased <code>performance_schema.events_errors_summary_global_by_error</code> table reference
     */
    public EventsErrorsSummaryGlobalByError(Name alias) {
        this(alias, EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR);
    }

    /**
     * Create a <code>performance_schema.events_errors_summary_global_by_error</code> table reference
     */
    public EventsErrorsSummaryGlobalByError() {
        this(DSL.name("events_errors_summary_global_by_error"), null);
    }

    public <O extends Record> EventsErrorsSummaryGlobalByError(Table<O> child, ForeignKey<O, EventsErrorsSummaryGlobalByErrorRecord> key) {
        super(child, key, EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR);
    }

    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    @Override
    public List<UniqueKey<EventsErrorsSummaryGlobalByErrorRecord>> getKeys() {
        return Arrays.<UniqueKey<EventsErrorsSummaryGlobalByErrorRecord>>asList(Keys.KEY_EVENTS_ERRORS_SUMMARY_GLOBAL_BY_ERROR_ERROR_NUMBER);
    }

    @Override
    public EventsErrorsSummaryGlobalByError as(String alias) {
        return new EventsErrorsSummaryGlobalByError(DSL.name(alias), this);
    }

    @Override
    public EventsErrorsSummaryGlobalByError as(Name alias) {
        return new EventsErrorsSummaryGlobalByError(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsErrorsSummaryGlobalByError rename(String name) {
        return new EventsErrorsSummaryGlobalByError(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsErrorsSummaryGlobalByError rename(Name name) {
        return new EventsErrorsSummaryGlobalByError(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, ULong, ULong, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
