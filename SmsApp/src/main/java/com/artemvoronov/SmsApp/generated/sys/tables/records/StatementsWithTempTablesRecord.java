/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sys.tables.records;


import com.artemvoronov.SmsApp.generated.sys.tables.StatementsWithTempTables;

import java.math.BigInteger;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatementsWithTempTablesRecord extends TableRecordImpl<StatementsWithTempTablesRecord> implements Record11<String, String, ULong, String, ULong, ULong, BigInteger, BigInteger, LocalDateTime, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sys.statements_with_temp_tables.query</code>.
     */
    public void setQuery(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.query</code>.
     */
    public String getQuery() {
        return (String) get(0);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.db</code>.
     */
    public void setDb(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.db</code>.
     */
    public String getDb() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.exec_count</code>.
     */
    public void setExecCount(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.exec_count</code>.
     */
    public ULong getExecCount() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.total_latency</code>.
     */
    public void setTotalLatency(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.total_latency</code>.
     */
    public String getTotalLatency() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.memory_tmp_tables</code>.
     */
    public void setMemoryTmpTables(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.memory_tmp_tables</code>.
     */
    public ULong getMemoryTmpTables() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.disk_tmp_tables</code>.
     */
    public void setDiskTmpTables(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.disk_tmp_tables</code>.
     */
    public ULong getDiskTmpTables() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.avg_tmp_tables_per_query</code>.
     */
    public void setAvgTmpTablesPerQuery(BigInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.avg_tmp_tables_per_query</code>.
     */
    public BigInteger getAvgTmpTablesPerQuery() {
        return (BigInteger) get(6);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.tmp_tables_to_disk_pct</code>.
     */
    public void setTmpTablesToDiskPct(BigInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.tmp_tables_to_disk_pct</code>.
     */
    public BigInteger getTmpTablesToDiskPct() {
        return (BigInteger) get(7);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.first_seen</code>.
     */
    public void setFirstSeen(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.first_seen</code>.
     */
    public LocalDateTime getFirstSeen() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.last_seen</code>.
     */
    public void setLastSeen(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.last_seen</code>.
     */
    public LocalDateTime getLastSeen() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>sys.statements_with_temp_tables.digest</code>.
     */
    public void setDigest(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>sys.statements_with_temp_tables.digest</code>.
     */
    public String getDigest() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<String, String, ULong, String, ULong, ULong, BigInteger, BigInteger, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<String, String, ULong, String, ULong, ULong, BigInteger, BigInteger, LocalDateTime, LocalDateTime, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.QUERY;
    }

    @Override
    public Field<String> field2() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.DB;
    }

    @Override
    public Field<ULong> field3() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.EXEC_COUNT;
    }

    @Override
    public Field<String> field4() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.TOTAL_LATENCY;
    }

    @Override
    public Field<ULong> field5() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.MEMORY_TMP_TABLES;
    }

    @Override
    public Field<ULong> field6() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.DISK_TMP_TABLES;
    }

    @Override
    public Field<BigInteger> field7() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.AVG_TMP_TABLES_PER_QUERY;
    }

    @Override
    public Field<BigInteger> field8() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.TMP_TABLES_TO_DISK_PCT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.FIRST_SEEN;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.LAST_SEEN;
    }

    @Override
    public Field<String> field11() {
        return StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES.DIGEST;
    }

    @Override
    public String component1() {
        return getQuery();
    }

    @Override
    public String component2() {
        return getDb();
    }

    @Override
    public ULong component3() {
        return getExecCount();
    }

    @Override
    public String component4() {
        return getTotalLatency();
    }

    @Override
    public ULong component5() {
        return getMemoryTmpTables();
    }

    @Override
    public ULong component6() {
        return getDiskTmpTables();
    }

    @Override
    public BigInteger component7() {
        return getAvgTmpTablesPerQuery();
    }

    @Override
    public BigInteger component8() {
        return getTmpTablesToDiskPct();
    }

    @Override
    public LocalDateTime component9() {
        return getFirstSeen();
    }

    @Override
    public LocalDateTime component10() {
        return getLastSeen();
    }

    @Override
    public String component11() {
        return getDigest();
    }

    @Override
    public String value1() {
        return getQuery();
    }

    @Override
    public String value2() {
        return getDb();
    }

    @Override
    public ULong value3() {
        return getExecCount();
    }

    @Override
    public String value4() {
        return getTotalLatency();
    }

    @Override
    public ULong value5() {
        return getMemoryTmpTables();
    }

    @Override
    public ULong value6() {
        return getDiskTmpTables();
    }

    @Override
    public BigInteger value7() {
        return getAvgTmpTablesPerQuery();
    }

    @Override
    public BigInteger value8() {
        return getTmpTablesToDiskPct();
    }

    @Override
    public LocalDateTime value9() {
        return getFirstSeen();
    }

    @Override
    public LocalDateTime value10() {
        return getLastSeen();
    }

    @Override
    public String value11() {
        return getDigest();
    }

    @Override
    public StatementsWithTempTablesRecord value1(String value) {
        setQuery(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value2(String value) {
        setDb(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value3(ULong value) {
        setExecCount(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value4(String value) {
        setTotalLatency(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value5(ULong value) {
        setMemoryTmpTables(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value6(ULong value) {
        setDiskTmpTables(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value7(BigInteger value) {
        setAvgTmpTablesPerQuery(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value8(BigInteger value) {
        setTmpTablesToDiskPct(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value9(LocalDateTime value) {
        setFirstSeen(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value10(LocalDateTime value) {
        setLastSeen(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord value11(String value) {
        setDigest(value);
        return this;
    }

    @Override
    public StatementsWithTempTablesRecord values(String value1, String value2, ULong value3, String value4, ULong value5, ULong value6, BigInteger value7, BigInteger value8, LocalDateTime value9, LocalDateTime value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatementsWithTempTablesRecord
     */
    public StatementsWithTempTablesRecord() {
        super(StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES);
    }

    /**
     * Create a detached, initialised StatementsWithTempTablesRecord
     */
    public StatementsWithTempTablesRecord(String query, String db, ULong execCount, String totalLatency, ULong memoryTmpTables, ULong diskTmpTables, BigInteger avgTmpTablesPerQuery, BigInteger tmpTablesToDiskPct, LocalDateTime firstSeen, LocalDateTime lastSeen, String digest) {
        super(StatementsWithTempTables.STATEMENTS_WITH_TEMP_TABLES);

        setQuery(query);
        setDb(db);
        setExecCount(execCount);
        setTotalLatency(totalLatency);
        setMemoryTmpTables(memoryTmpTables);
        setDiskTmpTables(diskTmpTables);
        setAvgTmpTablesPerQuery(avgTmpTablesPerQuery);
        setTmpTablesToDiskPct(tmpTablesToDiskPct);
        setFirstSeen(firstSeen);
        setLastSeen(lastSeen);
        setDigest(digest);
    }
}
