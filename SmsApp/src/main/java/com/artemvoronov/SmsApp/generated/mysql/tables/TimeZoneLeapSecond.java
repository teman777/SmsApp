/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.mysql.tables;


import com.artemvoronov.SmsApp.generated.mysql.Keys;
import com.artemvoronov.SmsApp.generated.mysql.Mysql;
import com.artemvoronov.SmsApp.generated.mysql.tables.records.TimeZoneLeapSecondRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * Leap seconds information for time zones
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeZoneLeapSecond extends TableImpl<TimeZoneLeapSecondRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mysql.time_zone_leap_second</code>
     */
    public static final TimeZoneLeapSecond TIME_ZONE_LEAP_SECOND = new TimeZoneLeapSecond();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TimeZoneLeapSecondRecord> getRecordType() {
        return TimeZoneLeapSecondRecord.class;
    }

    /**
     * The column <code>mysql.time_zone_leap_second.Transition_time</code>.
     */
    public final TableField<TimeZoneLeapSecondRecord, Long> TRANSITION_TIME = createField(DSL.name("Transition_time"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>mysql.time_zone_leap_second.Correction</code>.
     */
    public final TableField<TimeZoneLeapSecondRecord, Integer> CORRECTION = createField(DSL.name("Correction"), SQLDataType.INTEGER.nullable(false), this, "");

    private TimeZoneLeapSecond(Name alias, Table<TimeZoneLeapSecondRecord> aliased) {
        this(alias, aliased, null);
    }

    private TimeZoneLeapSecond(Name alias, Table<TimeZoneLeapSecondRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Leap seconds information for time zones"), TableOptions.table());
    }

    /**
     * Create an aliased <code>mysql.time_zone_leap_second</code> table reference
     */
    public TimeZoneLeapSecond(String alias) {
        this(DSL.name(alias), TIME_ZONE_LEAP_SECOND);
    }

    /**
     * Create an aliased <code>mysql.time_zone_leap_second</code> table reference
     */
    public TimeZoneLeapSecond(Name alias) {
        this(alias, TIME_ZONE_LEAP_SECOND);
    }

    /**
     * Create a <code>mysql.time_zone_leap_second</code> table reference
     */
    public TimeZoneLeapSecond() {
        this(DSL.name("time_zone_leap_second"), null);
    }

    public <O extends Record> TimeZoneLeapSecond(Table<O> child, ForeignKey<O, TimeZoneLeapSecondRecord> key) {
        super(child, key, TIME_ZONE_LEAP_SECOND);
    }

    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    @Override
    public UniqueKey<TimeZoneLeapSecondRecord> getPrimaryKey() {
        return Keys.KEY_TIME_ZONE_LEAP_SECOND_PRIMARY;
    }

    @Override
    public List<UniqueKey<TimeZoneLeapSecondRecord>> getKeys() {
        return Arrays.<UniqueKey<TimeZoneLeapSecondRecord>>asList(Keys.KEY_TIME_ZONE_LEAP_SECOND_PRIMARY);
    }

    @Override
    public TimeZoneLeapSecond as(String alias) {
        return new TimeZoneLeapSecond(DSL.name(alias), this);
    }

    @Override
    public TimeZoneLeapSecond as(Name alias) {
        return new TimeZoneLeapSecond(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeZoneLeapSecond rename(String name) {
        return new TimeZoneLeapSecond(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TimeZoneLeapSecond rename(Name name) {
        return new TimeZoneLeapSecond(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
