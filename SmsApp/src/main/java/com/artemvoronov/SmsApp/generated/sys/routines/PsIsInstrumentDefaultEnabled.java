/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.sys.routines;


import com.artemvoronov.SmsApp.generated.sys.Sys;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;


/**
 * 
 * Description
 * -----------
 * 
 * Returns whether an instrument is enabled by default in this version of 
 * MySQL.
 * 
 * Parameters
 * -----------
 * 
 * in_instrument VARCHAR(    128): 
 *   The instrument to check.
 * 
 * Returns
 * -----------
 * 
 * ENUM('YES', 'NO')
 * 
 * Example
 * -----------
 * 
 * mysql&gt; SELECT sys.ps_is_instrument_default_enabled('statement/sql/select');
 * +--------------------------------------------------------------+
 * | sys.ps_is_instrument_default_enabled('statement/sql/select') |
 * +--------------------------------------------------------------+
 * | YES                                                          |
 * +--------------------------------------------------------------+
 * 1 row in set (0.00 sec)
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PsIsInstrumentDefaultEnabled extends AbstractRoutine<String> {

    private static final long serialVersionUID = 1L;

    /**
     * The parameter <code>sys.ps_is_instrument_default_enabled.RETURN_VALUE</code>.
     */
    public static final Parameter<String> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", SQLDataType.VARCHAR(3), false, false);

    /**
     * The parameter <code>sys.ps_is_instrument_default_enabled.in_instrument</code>.
     */
    public static final Parameter<String> IN_INSTRUMENT = Internal.createParameter("in_instrument", SQLDataType.VARCHAR(128), false, false);

    /**
     * Create a new routine call instance
     */
    public PsIsInstrumentDefaultEnabled() {
        super("ps_is_instrument_default_enabled", Sys.SYS, SQLDataType.VARCHAR(3));

        setReturnParameter(RETURN_VALUE);
        addInParameter(IN_INSTRUMENT);
    }

    /**
     * Set the <code>in_instrument</code> parameter IN value to the routine
     */
    public void setInInstrument(String value) {
        setValue(IN_INSTRUMENT, value);
    }

    /**
     * Set the <code>in_instrument</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setInInstrument(Field<String> field) {
        setField(IN_INSTRUMENT, field);
    }
}
