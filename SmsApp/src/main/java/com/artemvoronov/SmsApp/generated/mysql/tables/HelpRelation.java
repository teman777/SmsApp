/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.mysql.tables;


import com.artemvoronov.SmsApp.generated.mysql.Keys;
import com.artemvoronov.SmsApp.generated.mysql.Mysql;
import com.artemvoronov.SmsApp.generated.mysql.tables.records.HelpRelationRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * keyword-topic relation
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HelpRelation extends TableImpl<HelpRelationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mysql.help_relation</code>
     */
    public static final HelpRelation HELP_RELATION = new HelpRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HelpRelationRecord> getRecordType() {
        return HelpRelationRecord.class;
    }

    /**
     * The column <code>mysql.help_relation.help_topic_id</code>.
     */
    public final TableField<HelpRelationRecord, UInteger> HELP_TOPIC_ID = createField(DSL.name("help_topic_id"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>mysql.help_relation.help_keyword_id</code>.
     */
    public final TableField<HelpRelationRecord, UInteger> HELP_KEYWORD_ID = createField(DSL.name("help_keyword_id"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    private HelpRelation(Name alias, Table<HelpRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private HelpRelation(Name alias, Table<HelpRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("keyword-topic relation"), TableOptions.table());
    }

    /**
     * Create an aliased <code>mysql.help_relation</code> table reference
     */
    public HelpRelation(String alias) {
        this(DSL.name(alias), HELP_RELATION);
    }

    /**
     * Create an aliased <code>mysql.help_relation</code> table reference
     */
    public HelpRelation(Name alias) {
        this(alias, HELP_RELATION);
    }

    /**
     * Create a <code>mysql.help_relation</code> table reference
     */
    public HelpRelation() {
        this(DSL.name("help_relation"), null);
    }

    public <O extends Record> HelpRelation(Table<O> child, ForeignKey<O, HelpRelationRecord> key) {
        super(child, key, HELP_RELATION);
    }

    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    @Override
    public UniqueKey<HelpRelationRecord> getPrimaryKey() {
        return Keys.KEY_HELP_RELATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<HelpRelationRecord>> getKeys() {
        return Arrays.<UniqueKey<HelpRelationRecord>>asList(Keys.KEY_HELP_RELATION_PRIMARY);
    }

    @Override
    public HelpRelation as(String alias) {
        return new HelpRelation(DSL.name(alias), this);
    }

    @Override
    public HelpRelation as(Name alias) {
        return new HelpRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HelpRelation rename(String name) {
        return new HelpRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HelpRelation rename(Name name) {
        return new HelpRelation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UInteger, UInteger> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
