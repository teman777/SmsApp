/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.performance_schema.tables.records;


import com.artemvoronov.SmsApp.generated.performance_schema.enums.ReplicationApplierFiltersConfiguredBy;
import com.artemvoronov.SmsApp.generated.performance_schema.tables.ReplicationApplierFilters;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReplicationApplierFiltersRecord extends TableRecordImpl<ReplicationApplierFiltersRecord> implements Record6<String, String, String, ReplicationApplierFiltersConfiguredBy, LocalDateTime, ULong> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>performance_schema.replication_applier_filters.CHANNEL_NAME</code>.
     */
    public void setChannelName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_filters.CHANNEL_NAME</code>.
     */
    public String getChannelName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_filters.FILTER_NAME</code>.
     */
    public void setFilterName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_filters.FILTER_NAME</code>.
     */
    public String getFilterName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_filters.FILTER_RULE</code>.
     */
    public void setFilterRule(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_filters.FILTER_RULE</code>.
     */
    public String getFilterRule() {
        return (String) get(2);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_filters.CONFIGURED_BY</code>.
     */
    public void setConfiguredBy(ReplicationApplierFiltersConfiguredBy value) {
        set(3, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_filters.CONFIGURED_BY</code>.
     */
    public ReplicationApplierFiltersConfiguredBy getConfiguredBy() {
        return (ReplicationApplierFiltersConfiguredBy) get(3);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_filters.ACTIVE_SINCE</code>.
     */
    public void setActiveSince(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_filters.ACTIVE_SINCE</code>.
     */
    public LocalDateTime getActiveSince() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>performance_schema.replication_applier_filters.COUNTER</code>.
     */
    public void setCounter(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>performance_schema.replication_applier_filters.COUNTER</code>.
     */
    public ULong getCounter() {
        return (ULong) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, ReplicationApplierFiltersConfiguredBy, LocalDateTime, ULong> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, ReplicationApplierFiltersConfiguredBy, LocalDateTime, ULong> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.CHANNEL_NAME;
    }

    @Override
    public Field<String> field2() {
        return ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.FILTER_NAME;
    }

    @Override
    public Field<String> field3() {
        return ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.FILTER_RULE;
    }

    @Override
    public Field<ReplicationApplierFiltersConfiguredBy> field4() {
        return ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.CONFIGURED_BY;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.ACTIVE_SINCE;
    }

    @Override
    public Field<ULong> field6() {
        return ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS.COUNTER;
    }

    @Override
    public String component1() {
        return getChannelName();
    }

    @Override
    public String component2() {
        return getFilterName();
    }

    @Override
    public String component3() {
        return getFilterRule();
    }

    @Override
    public ReplicationApplierFiltersConfiguredBy component4() {
        return getConfiguredBy();
    }

    @Override
    public LocalDateTime component5() {
        return getActiveSince();
    }

    @Override
    public ULong component6() {
        return getCounter();
    }

    @Override
    public String value1() {
        return getChannelName();
    }

    @Override
    public String value2() {
        return getFilterName();
    }

    @Override
    public String value3() {
        return getFilterRule();
    }

    @Override
    public ReplicationApplierFiltersConfiguredBy value4() {
        return getConfiguredBy();
    }

    @Override
    public LocalDateTime value5() {
        return getActiveSince();
    }

    @Override
    public ULong value6() {
        return getCounter();
    }

    @Override
    public ReplicationApplierFiltersRecord value1(String value) {
        setChannelName(value);
        return this;
    }

    @Override
    public ReplicationApplierFiltersRecord value2(String value) {
        setFilterName(value);
        return this;
    }

    @Override
    public ReplicationApplierFiltersRecord value3(String value) {
        setFilterRule(value);
        return this;
    }

    @Override
    public ReplicationApplierFiltersRecord value4(ReplicationApplierFiltersConfiguredBy value) {
        setConfiguredBy(value);
        return this;
    }

    @Override
    public ReplicationApplierFiltersRecord value5(LocalDateTime value) {
        setActiveSince(value);
        return this;
    }

    @Override
    public ReplicationApplierFiltersRecord value6(ULong value) {
        setCounter(value);
        return this;
    }

    @Override
    public ReplicationApplierFiltersRecord values(String value1, String value2, String value3, ReplicationApplierFiltersConfiguredBy value4, LocalDateTime value5, ULong value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReplicationApplierFiltersRecord
     */
    public ReplicationApplierFiltersRecord() {
        super(ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS);
    }

    /**
     * Create a detached, initialised ReplicationApplierFiltersRecord
     */
    public ReplicationApplierFiltersRecord(String channelName, String filterName, String filterRule, ReplicationApplierFiltersConfiguredBy configuredBy, LocalDateTime activeSince, ULong counter) {
        super(ReplicationApplierFilters.REPLICATION_APPLIER_FILTERS);

        setChannelName(channelName);
        setFilterName(filterName);
        setFilterRule(filterRule);
        setConfiguredBy(configuredBy);
        setActiveSince(activeSince);
        setCounter(counter);
    }
}
