/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.performance_schema.tables;


import com.artemvoronov.SmsApp.generated.performance_schema.Keys;
import com.artemvoronov.SmsApp.generated.performance_schema.PerformanceSchema;
import com.artemvoronov.SmsApp.generated.performance_schema.tables.records.EventsStatementsHistogramGlobalRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsStatementsHistogramGlobal extends TableImpl<EventsStatementsHistogramGlobalRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>performance_schema.events_statements_histogram_global</code>
     */
    public static final EventsStatementsHistogramGlobal EVENTS_STATEMENTS_HISTOGRAM_GLOBAL = new EventsStatementsHistogramGlobal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventsStatementsHistogramGlobalRecord> getRecordType() {
        return EventsStatementsHistogramGlobalRecord.class;
    }

    /**
     * The column <code>performance_schema.events_statements_histogram_global.BUCKET_NUMBER</code>.
     */
    public final TableField<EventsStatementsHistogramGlobalRecord, UInteger> BUCKET_NUMBER = createField(DSL.name("BUCKET_NUMBER"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_statements_histogram_global.BUCKET_TIMER_LOW</code>.
     */
    public final TableField<EventsStatementsHistogramGlobalRecord, ULong> BUCKET_TIMER_LOW = createField(DSL.name("BUCKET_TIMER_LOW"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_statements_histogram_global.BUCKET_TIMER_HIGH</code>.
     */
    public final TableField<EventsStatementsHistogramGlobalRecord, ULong> BUCKET_TIMER_HIGH = createField(DSL.name("BUCKET_TIMER_HIGH"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_statements_histogram_global.COUNT_BUCKET</code>.
     */
    public final TableField<EventsStatementsHistogramGlobalRecord, ULong> COUNT_BUCKET = createField(DSL.name("COUNT_BUCKET"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_statements_histogram_global.COUNT_BUCKET_AND_LOWER</code>.
     */
    public final TableField<EventsStatementsHistogramGlobalRecord, ULong> COUNT_BUCKET_AND_LOWER = createField(DSL.name("COUNT_BUCKET_AND_LOWER"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>performance_schema.events_statements_histogram_global.BUCKET_QUANTILE</code>.
     */
    public final TableField<EventsStatementsHistogramGlobalRecord, Double> BUCKET_QUANTILE = createField(DSL.name("BUCKET_QUANTILE"), SQLDataType.DOUBLE.nullable(false), this, "");

    private EventsStatementsHistogramGlobal(Name alias, Table<EventsStatementsHistogramGlobalRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventsStatementsHistogramGlobal(Name alias, Table<EventsStatementsHistogramGlobalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>performance_schema.events_statements_histogram_global</code> table reference
     */
    public EventsStatementsHistogramGlobal(String alias) {
        this(DSL.name(alias), EVENTS_STATEMENTS_HISTOGRAM_GLOBAL);
    }

    /**
     * Create an aliased <code>performance_schema.events_statements_histogram_global</code> table reference
     */
    public EventsStatementsHistogramGlobal(Name alias) {
        this(alias, EVENTS_STATEMENTS_HISTOGRAM_GLOBAL);
    }

    /**
     * Create a <code>performance_schema.events_statements_histogram_global</code> table reference
     */
    public EventsStatementsHistogramGlobal() {
        this(DSL.name("events_statements_histogram_global"), null);
    }

    public <O extends Record> EventsStatementsHistogramGlobal(Table<O> child, ForeignKey<O, EventsStatementsHistogramGlobalRecord> key) {
        super(child, key, EVENTS_STATEMENTS_HISTOGRAM_GLOBAL);
    }

    @Override
    public Schema getSchema() {
        return PerformanceSchema.PERFORMANCE_SCHEMA;
    }

    @Override
    public UniqueKey<EventsStatementsHistogramGlobalRecord> getPrimaryKey() {
        return Keys.KEY_EVENTS_STATEMENTS_HISTOGRAM_GLOBAL_PRIMARY;
    }

    @Override
    public List<UniqueKey<EventsStatementsHistogramGlobalRecord>> getKeys() {
        return Arrays.<UniqueKey<EventsStatementsHistogramGlobalRecord>>asList(Keys.KEY_EVENTS_STATEMENTS_HISTOGRAM_GLOBAL_PRIMARY);
    }

    @Override
    public EventsStatementsHistogramGlobal as(String alias) {
        return new EventsStatementsHistogramGlobal(DSL.name(alias), this);
    }

    @Override
    public EventsStatementsHistogramGlobal as(Name alias) {
        return new EventsStatementsHistogramGlobal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsStatementsHistogramGlobal rename(String name) {
        return new EventsStatementsHistogramGlobal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventsStatementsHistogramGlobal rename(Name name) {
        return new EventsStatementsHistogramGlobal(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, ULong, ULong, ULong, ULong, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
