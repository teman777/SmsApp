/*
 * This file is generated by jOOQ.
 */
package com.artemvoronov.SmsApp.generated.mysql.tables;


import com.artemvoronov.SmsApp.generated.mysql.Keys;
import com.artemvoronov.SmsApp.generated.mysql.Mysql;
import com.artemvoronov.SmsApp.generated.mysql.tables.records.HelpCategoryRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UShort;


/**
 * help categories
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HelpCategory extends TableImpl<HelpCategoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mysql.help_category</code>
     */
    public static final HelpCategory HELP_CATEGORY = new HelpCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HelpCategoryRecord> getRecordType() {
        return HelpCategoryRecord.class;
    }

    /**
     * The column <code>mysql.help_category.help_category_id</code>.
     */
    public final TableField<HelpCategoryRecord, UShort> HELP_CATEGORY_ID = createField(DSL.name("help_category_id"), SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>mysql.help_category.name</code>.
     */
    public final TableField<HelpCategoryRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CHAR(64).nullable(false), this, "");

    /**
     * The column <code>mysql.help_category.parent_category_id</code>.
     */
    public final TableField<HelpCategoryRecord, UShort> PARENT_CATEGORY_ID = createField(DSL.name("parent_category_id"), SQLDataType.SMALLINTUNSIGNED, this, "");

    /**
     * The column <code>mysql.help_category.url</code>.
     */
    public final TableField<HelpCategoryRecord, String> URL = createField(DSL.name("url"), SQLDataType.CLOB.nullable(false), this, "");

    private HelpCategory(Name alias, Table<HelpCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private HelpCategory(Name alias, Table<HelpCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("help categories"), TableOptions.table());
    }

    /**
     * Create an aliased <code>mysql.help_category</code> table reference
     */
    public HelpCategory(String alias) {
        this(DSL.name(alias), HELP_CATEGORY);
    }

    /**
     * Create an aliased <code>mysql.help_category</code> table reference
     */
    public HelpCategory(Name alias) {
        this(alias, HELP_CATEGORY);
    }

    /**
     * Create a <code>mysql.help_category</code> table reference
     */
    public HelpCategory() {
        this(DSL.name("help_category"), null);
    }

    public <O extends Record> HelpCategory(Table<O> child, ForeignKey<O, HelpCategoryRecord> key) {
        super(child, key, HELP_CATEGORY);
    }

    @Override
    public Schema getSchema() {
        return Mysql.MYSQL;
    }

    @Override
    public UniqueKey<HelpCategoryRecord> getPrimaryKey() {
        return Keys.KEY_HELP_CATEGORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<HelpCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<HelpCategoryRecord>>asList(Keys.KEY_HELP_CATEGORY_PRIMARY, Keys.KEY_HELP_CATEGORY_NAME);
    }

    @Override
    public HelpCategory as(String alias) {
        return new HelpCategory(DSL.name(alias), this);
    }

    @Override
    public HelpCategory as(Name alias) {
        return new HelpCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HelpCategory rename(String name) {
        return new HelpCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HelpCategory rename(Name name) {
        return new HelpCategory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<UShort, String, UShort, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
